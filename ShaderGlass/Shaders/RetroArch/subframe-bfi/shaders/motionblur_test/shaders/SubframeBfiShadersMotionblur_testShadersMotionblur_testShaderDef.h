/*
ShaderGlass shader subframe-bfi-shaders-motionblur_test-shaders\motionblur_test imported from RetroArch:
https://github.com/libretro/slang-shaders/blob/23046258f7fd02242cc6dd4c08c997a8ddb84935/subframe-bfi/shaders/motionblur_test/shaders/motionblur_test.slang
See original file for full credits and usage license with excerpts below. 
This file is auto-generated, do not modify directly.

// motionblur test
// by hunterk
// license: public domain

*/

#pragma once

namespace RetroArchSubframeBfiShadersMotionblur_testShadersMotionblur_testShaderDefs
{
static const BYTE sVertexByteCode[] =
{
68,88,66,67,163,59,
204,69,93,156,230,114,
73,118,212,21,120,73,
251,38,1,0,0,0,
16,10,0,0,5,0,
0,0,52,0,0,0,
36,4,0,0,112,4,
0,0,16,5,0,0,
116,9,0,0,82,68,
69,70,232,3,0,0,
2,0,0,0,136,0,
0,0,2,0,0,0,
60,0,0,0,0,5,
254,255,0,129,0,0,
190,3,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
124,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,1,0,
0,0,128,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,1,0,
0,0,1,0,0,0,
0,0,0,0,85,66,
79,0,80,117,115,104,
0,171,171,171,124,0,
0,0,1,0,0,0,
184,0,0,0,64,0,
0,0,0,0,0,0,
0,0,0,0,128,0,
0,0,9,0,0,0,
24,1,0,0,96,0,
0,0,0,0,0,0,
0,0,0,0,224,0,
0,0,0,0,0,0,
64,0,0,0,2,0,
0,0,244,0,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,103,108,111,98,
97,108,95,77,86,80,
0,102,108,111,97,116,
52,120,52,0,2,0,
3,0,4,0,4,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
235,0,0,0,128,2,
0,0,0,0,0,0,
16,0,0,0,0,0,
0,0,156,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,192,2,0,0,
16,0,0,0,16,0,
0,0,0,0,0,0,
156,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
212,2,0,0,32,0,
0,0,16,0,0,0,
2,0,0,0,156,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,230,2,
0,0,48,0,0,0,
4,0,0,0,2,0,
0,0,0,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,36,3,0,0,
52,0,0,0,4,0,
0,0,2,0,0,0,
0,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
58,3,0,0,56,0,
0,0,4,0,0,0,
2,0,0,0,0,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,81,3,
0,0,64,0,0,0,
16,0,0,0,0,0,
0,0,156,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,106,3,0,0,
80,0,0,0,4,0,
0,0,2,0,0,0,
132,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
168,3,0,0,84,0,
0,0,4,0,0,0,
0,0,0,0,132,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,112,97,
114,97,109,115,95,83,
111,117,114,99,101,83,
105,122,101,0,102,108,
111,97,116,52,0,171,
171,171,1,0,3,0,
1,0,4,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,146,2,
0,0,112,97,114,97,
109,115,95,79,114,105,
103,105,110,97,108,83,
105,122,101,0,112,97,
114,97,109,115,95,79,
117,116,112,117,116,83,
105,122,101,0,112,97,
114,97,109,115,95,70,
114,97,109,101,67,111,
117,110,116,0,100,119,
111,114,100,0,171,171,
0,0,19,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,248,2,0,0,
112,97,114,97,109,115,
95,84,111,116,97,108,
83,117,98,70,114,97,
109,101,115,0,112,97,
114,97,109,115,95,67,
117,114,114,101,110,116,
83,117,98,70,114,97,
109,101,0,112,97,114,
97,109,115,95,70,105,
110,97,108,86,105,101,
119,112,111,114,116,83,
105,122,101,0,112,97,
114,97,109,115,95,105,
110,118,95,115,112,101,
101,100,0,102,108,111,
97,116,0,171,171,171,
0,0,3,0,1,0,
1,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,123,3,0,0,
112,97,114,97,109,115,
95,79,114,105,103,105,
110,97,108,65,115,112,
101,99,116,0,77,105,
99,114,111,115,111,102,
116,32,40,82,41,32,
72,76,83,76,32,83,
104,97,100,101,114,32,
67,111,109,112,105,108,
101,114,32,49,48,46,
49,0,171,171,73,83,
71,78,68,0,0,0,
2,0,0,0,8,0,
0,0,56,0,0,0,
0,0,0,0,0,0,
0,0,3,0,0,0,
0,0,0,0,15,15,
0,0,56,0,0,0,
1,0,0,0,0,0,
0,0,3,0,0,0,
1,0,0,0,3,3,
0,0,84,69,88,67,
79,79,82,68,0,171,
171,171,79,83,71,78,
152,0,0,0,5,0,
0,0,8,0,0,0,
128,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,12,0,0,
128,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,12,3,0,0,
128,0,0,0,2,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,3,12,0,0,
128,0,0,0,3,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,12,3,0,0,
137,0,0,0,0,0,
0,0,1,0,0,0,
3,0,0,0,2,0,
0,0,15,0,0,0,
84,69,88,67,79,79,
82,68,0,83,86,95,
80,111,115,105,116,105,
111,110,0,171,171,171,
83,72,69,88,92,4,
0,0,80,0,1,0,
23,1,0,0,106,8,
0,1,89,0,0,4,
70,142,32,0,0,0,
0,0,4,0,0,0,
89,0,0,4,70,142,
32,0,1,0,0,0,
6,0,0,0,95,0,
0,3,242,16,16,0,
0,0,0,0,95,0,
0,3,50,16,16,0,
1,0,0,0,101,0,
0,3,50,32,16,0,
0,0,0,0,101,0,
0,3,194,32,16,0,
0,0,0,0,101,0,
0,3,50,32,16,0,
1,0,0,0,101,0,
0,3,194,32,16,0,
1,0,0,0,103,0,
0,4,242,32,16,0,
2,0,0,0,1,0,
0,0,104,0,0,2,
2,0,0,0,54,0,
0,5,50,32,16,0,
0,0,0,0,70,16,
16,0,1,0,0,0,
54,0,0,5,130,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
200,66,86,0,0,6,
114,0,16,0,1,0,
0,0,70,130,32,0,
1,0,0,0,3,0,
0,0,56,0,0,8,
18,0,16,0,0,0,
0,0,10,0,16,0,
1,0,0,0,10,128,
32,0,1,0,0,0,
5,0,0,0,56,0,
0,7,34,0,16,0,
0,0,0,0,26,0,
16,0,1,0,0,0,
10,0,16,0,0,0,
0,0,14,0,0,8,
18,0,16,0,1,0,
0,0,26,0,16,0,
0,0,0,0,10,128,
32,0,1,0,0,0,
2,0,0,0,65,0,
0,5,18,0,16,0,
1,0,0,0,10,0,
16,0,1,0,0,0,
50,0,0,11,34,0,
16,0,0,0,0,0,
10,128,32,128,65,0,
0,0,1,0,0,0,
2,0,0,0,10,0,
16,0,1,0,0,0,
26,0,16,0,0,0,
0,0,67,0,0,5,
66,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,50,0,
0,11,194,32,16,0,
0,0,0,0,6,20,
16,0,1,0,0,0,
6,132,32,0,1,0,
0,0,2,0,0,0,
166,14,16,128,65,0,
0,0,0,0,0,0,
0,0,0,7,34,0,
16,0,0,0,0,0,
42,0,16,0,1,0,
0,0,1,64,0,0,
0,0,128,191,56,0,
0,7,34,0,16,0,
0,0,0,0,26,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
0,63,67,0,0,5,
34,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,50,0,
0,9,34,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
26,0,16,0,1,0,
0,0,26,0,16,0,
0,0,0,0,50,0,
0,9,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
26,0,16,0,1,0,
0,0,42,0,16,0,
1,0,0,0,0,0,
0,7,18,0,16,0,
0,0,0,0,10,0,
16,0,0,0,0,0,
1,64,0,0,0,0,
128,191,14,0,0,8,
66,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,10,128,
32,0,1,0,0,0,
2,0,0,0,65,0,
0,5,66,0,16,0,
0,0,0,0,42,0,
16,0,0,0,0,0,
50,0,0,11,34,0,
16,0,0,0,0,0,
10,128,32,128,65,0,
0,0,1,0,0,0,
2,0,0,0,42,0,
16,0,0,0,0,0,
26,0,16,0,0,0,
0,0,67,0,0,5,
66,0,16,0,0,0,
0,0,26,0,16,0,
0,0,0,0,54,0,
0,5,130,0,16,0,
0,0,0,0,1,64,
0,0,0,0,122,67,
50,0,0,11,194,32,
16,0,1,0,0,0,
6,20,16,0,1,0,
0,0,6,132,32,0,
1,0,0,0,2,0,
0,0,166,14,16,128,
65,0,0,0,0,0,
0,0,14,0,0,8,
34,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,10,128,
32,0,1,0,0,0,
2,0,0,0,65,0,
0,5,34,0,16,0,
0,0,0,0,26,0,
16,0,0,0,0,0,
50,0,0,11,18,0,
16,0,0,0,0,0,
10,128,32,128,65,0,
0,0,1,0,0,0,
2,0,0,0,26,0,
16,0,0,0,0,0,
10,0,16,0,0,0,
0,0,67,0,0,5,
18,0,16,0,0,0,
0,0,10,0,16,0,
0,0,0,0,54,0,
0,5,34,0,16,0,
0,0,0,0,1,64,
0,0,0,0,200,67,
50,0,0,11,50,32,
16,0,1,0,0,0,
70,16,16,0,1,0,
0,0,70,128,32,0,
1,0,0,0,2,0,
0,0,70,0,16,128,
65,0,0,0,0,0,
0,0,56,0,0,8,
242,0,16,0,0,0,
0,0,86,21,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
1,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,6,16,
16,0,0,0,0,0,
70,142,32,0,0,0,
0,0,0,0,0,0,
70,14,16,0,0,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,166,26,16,0,
0,0,0,0,70,142,
32,0,0,0,0,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
50,0,0,10,242,32,
16,0,2,0,0,0,
246,31,16,0,0,0,
0,0,70,142,32,0,
0,0,0,0,3,0,
0,0,70,14,16,0,
0,0,0,0,62,0,
0,1,83,84,65,84,
148,0,0,0,33,0,
0,0,2,0,0,0,
0,0,0,0,7,0,
0,0,27,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,4,0,0,0,
0,0,0,0,8,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};


static const BYTE sFragmentByteCode[] =
{
68,88,66,67,26,129,
211,70,179,64,175,188,
179,233,188,104,165,161,
250,63,1,0,0,0,
60,11,0,0,5,0,
0,0,52,0,0,0,
124,4,0,0,248,4,
0,0,44,5,0,0,
160,10,0,0,82,68,
69,70,64,4,0,0,
1,0,0,0,88,1,
0,0,7,0,0,0,
60,0,0,0,0,5,
255,255,0,129,0,0,
22,4,0,0,82,68,
49,49,60,0,0,0,
24,0,0,0,32,0,
0,0,40,0,0,0,
36,0,0,0,12,0,
0,0,0,0,0,0,
28,1,0,0,3,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,2,0,0,0,
1,0,0,0,1,0,
0,0,44,1,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,2,0,
0,0,1,0,0,0,
13,0,0,0,51,1,
0,0,2,0,0,0,
5,0,0,0,4,0,
0,0,255,255,255,255,
3,0,0,0,1,0,
0,0,13,0,0,0,
56,1,0,0,2,0,
0,0,5,0,0,0,
4,0,0,0,255,255,
255,255,4,0,0,0,
1,0,0,0,13,0,
0,0,63,1,0,0,
2,0,0,0,5,0,
0,0,4,0,0,0,
255,255,255,255,5,0,
0,0,1,0,0,0,
13,0,0,0,72,1,
0,0,2,0,0,0,
5,0,0,0,4,0,
0,0,255,255,255,255,
6,0,0,0,1,0,
0,0,13,0,0,0,
80,1,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,1,0,0,0,
1,0,0,0,0,0,
0,0,95,83,111,117,
114,99,101,95,115,97,
109,112,108,101,114,0,
83,111,117,114,99,101,
0,98,97,115,101,0,
116,119,111,83,117,98,
0,116,104,114,101,101,
83,117,98,0,102,111,
117,114,83,117,98,0,
80,117,115,104,0,171,
171,171,80,1,0,0,
9,0,0,0,112,1,
0,0,96,0,0,0,
0,0,0,0,0,0,
0,0,216,2,0,0,
0,0,0,0,16,0,
0,0,0,0,0,0,
244,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
24,3,0,0,16,0,
0,0,16,0,0,0,
0,0,0,0,244,2,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,44,3,
0,0,32,0,0,0,
16,0,0,0,0,0,
0,0,244,2,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,62,3,0,0,
48,0,0,0,4,0,
0,0,0,0,0,0,
88,3,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
124,3,0,0,52,0,
0,0,4,0,0,0,
2,0,0,0,88,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,146,3,
0,0,56,0,0,0,
4,0,0,0,0,0,
0,0,88,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,169,3,0,0,
64,0,0,0,16,0,
0,0,0,0,0,0,
244,2,0,0,0,0,
0,0,255,255,255,255,
0,0,0,0,255,255,
255,255,0,0,0,0,
194,3,0,0,80,0,
0,0,4,0,0,0,
0,0,0,0,220,3,
0,0,0,0,0,0,
255,255,255,255,0,0,
0,0,255,255,255,255,
0,0,0,0,0,4,
0,0,84,0,0,0,
4,0,0,0,0,0,
0,0,220,3,0,0,
0,0,0,0,255,255,
255,255,0,0,0,0,
255,255,255,255,0,0,
0,0,112,97,114,97,
109,115,95,83,111,117,
114,99,101,83,105,122,
101,0,102,108,111,97,
116,52,0,171,171,171,
1,0,3,0,1,0,
4,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,234,2,0,0,
112,97,114,97,109,115,
95,79,114,105,103,105,
110,97,108,83,105,122,
101,0,112,97,114,97,
109,115,95,79,117,116,
112,117,116,83,105,122,
101,0,112,97,114,97,
109,115,95,70,114,97,
109,101,67,111,117,110,
116,0,100,119,111,114,
100,0,171,171,0,0,
19,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
80,3,0,0,112,97,
114,97,109,115,95,84,
111,116,97,108,83,117,
98,70,114,97,109,101,
115,0,112,97,114,97,
109,115,95,67,117,114,
114,101,110,116,83,117,
98,70,114,97,109,101,
0,112,97,114,97,109,
115,95,70,105,110,97,
108,86,105,101,119,112,
111,114,116,83,105,122,
101,0,112,97,114,97,
109,115,95,105,110,118,
95,115,112,101,101,100,
0,102,108,111,97,116,
0,171,171,171,0,0,
3,0,1,0,1,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
211,3,0,0,112,97,
114,97,109,115,95,79,
114,105,103,105,110,97,
108,65,115,112,101,99,
116,0,77,105,99,114,
111,115,111,102,116,32,
40,82,41,32,72,76,
83,76,32,83,104,97,
100,101,114,32,67,111,
109,112,105,108,101,114,
32,49,48,46,49,0,
171,171,73,83,71,78,
116,0,0,0,4,0,
0,0,8,0,0,0,
104,0,0,0,0,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,3,3,0,0,
104,0,0,0,1,0,
0,0,0,0,0,0,
3,0,0,0,0,0,
0,0,12,12,0,0,
104,0,0,0,2,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,3,3,0,0,
104,0,0,0,3,0,
0,0,0,0,0,0,
3,0,0,0,1,0,
0,0,12,12,0,0,
84,69,88,67,79,79,
82,68,0,171,171,171,
79,83,71,78,44,0,
0,0,1,0,0,0,
8,0,0,0,32,0,
0,0,0,0,0,0,
0,0,0,0,3,0,
0,0,0,0,0,0,
15,0,0,0,83,86,
95,84,97,114,103,101,
116,0,171,171,83,72,
69,88,108,5,0,0,
80,0,0,0,91,1,
0,0,106,8,0,1,
89,0,0,4,70,142,
32,0,1,0,0,0,
4,0,0,0,90,0,
0,3,0,96,16,0,
2,0,0,0,88,24,
0,4,0,112,16,0,
2,0,0,0,85,85,
0,0,88,24,0,4,
0,112,16,0,3,0,
0,0,85,85,0,0,
88,24,0,4,0,112,
16,0,4,0,0,0,
85,85,0,0,88,24,
0,4,0,112,16,0,
5,0,0,0,85,85,
0,0,88,24,0,4,
0,112,16,0,6,0,
0,0,85,85,0,0,
98,16,0,3,50,16,
16,0,0,0,0,0,
98,16,0,3,194,16,
16,0,0,0,0,0,
98,16,0,3,50,16,
16,0,1,0,0,0,
98,16,0,3,194,16,
16,0,1,0,0,0,
101,0,0,3,242,32,
16,0,0,0,0,0,
104,0,0,2,4,0,
0,0,32,0,0,8,
18,0,16,0,0,0,
0,0,1,64,0,0,
2,0,0,0,26,128,
32,0,1,0,0,0,
3,0,0,0,31,0,
4,3,10,0,16,0,
0,0,0,0,27,0,
0,5,50,0,16,0,
0,0,0,0,230,26,
16,0,0,0,0,0,
54,0,0,8,194,0,
16,0,0,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,45,0,0,137,
194,0,0,128,67,85,
21,0,242,0,16,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
70,126,16,0,3,0,
0,0,56,0,0,7,
242,0,16,0,1,0,
0,0,70,14,16,0,
0,0,0,0,246,15,
16,0,0,0,0,0,
27,0,0,5,50,0,
16,0,2,0,0,0,
70,16,16,0,1,0,
0,0,54,0,0,8,
194,0,16,0,2,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,45,0,
0,137,194,0,0,128,
67,85,21,0,242,0,
16,0,2,0,0,0,
70,14,16,0,2,0,
0,0,70,126,16,0,
4,0,0,0,50,0,
0,10,242,0,16,0,
0,0,0,0,246,15,
16,128,65,0,0,0,
0,0,0,0,70,14,
16,0,0,0,0,0,
70,14,16,0,2,0,
0,0,50,0,0,9,
242,32,16,0,0,0,
0,0,246,15,16,0,
2,0,0,0,70,14,
16,0,0,0,0,0,
70,14,16,0,1,0,
0,0,18,0,0,1,
32,0,0,8,18,0,
16,0,0,0,0,0,
1,64,0,0,3,0,
0,0,26,128,32,0,
1,0,0,0,3,0,
0,0,31,0,4,3,
10,0,16,0,0,0,
0,0,27,0,0,5,
50,0,16,0,0,0,
0,0,230,26,16,0,
0,0,0,0,54,0,
0,8,194,0,16,0,
0,0,0,0,2,64,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
45,0,0,137,194,0,
0,128,67,85,21,0,
242,0,16,0,0,0,
0,0,70,14,16,0,
0,0,0,0,70,126,
16,0,3,0,0,0,
56,0,0,7,242,0,
16,0,1,0,0,0,
70,14,16,0,0,0,
0,0,246,15,16,0,
0,0,0,0,27,0,
0,5,50,0,16,0,
2,0,0,0,70,16,
16,0,1,0,0,0,
54,0,0,8,194,0,
16,0,2,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,45,0,0,137,
194,0,0,128,67,85,
21,0,242,0,16,0,
2,0,0,0,70,14,
16,0,2,0,0,0,
70,126,16,0,5,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,246,15,16,128,
65,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,70,14,
16,0,2,0,0,0,
50,0,0,9,242,32,
16,0,0,0,0,0,
246,15,16,0,2,0,
0,0,70,14,16,0,
0,0,0,0,70,14,
16,0,1,0,0,0,
18,0,0,1,32,0,
0,8,18,0,16,0,
0,0,0,0,1,64,
0,0,4,0,0,0,
26,128,32,0,1,0,
0,0,3,0,0,0,
31,0,4,3,10,0,
16,0,0,0,0,0,
27,0,0,5,50,0,
16,0,0,0,0,0,
230,26,16,0,0,0,
0,0,54,0,0,8,
194,0,16,0,0,0,
0,0,2,64,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,45,0,
0,137,194,0,0,128,
67,85,21,0,242,0,
16,0,0,0,0,0,
70,14,16,0,0,0,
0,0,70,126,16,0,
3,0,0,0,56,0,
0,7,242,0,16,0,
1,0,0,0,70,14,
16,0,0,0,0,0,
246,15,16,0,0,0,
0,0,27,0,0,5,
242,0,16,0,2,0,
0,0,70,30,16,0,
1,0,0,0,54,0,
0,5,50,0,16,0,
3,0,0,0,230,10,
16,0,2,0,0,0,
54,0,0,8,194,0,
16,0,3,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,45,0,0,137,
194,0,0,128,67,85,
21,0,242,0,16,0,
3,0,0,0,70,14,
16,0,3,0,0,0,
70,126,16,0,4,0,
0,0,50,0,0,10,
242,0,16,0,0,0,
0,0,246,15,16,128,
65,0,0,0,0,0,
0,0,70,14,16,0,
0,0,0,0,70,14,
16,0,3,0,0,0,
50,0,0,9,242,0,
16,0,0,0,0,0,
246,15,16,0,3,0,
0,0,70,14,16,0,
0,0,0,0,70,14,
16,0,1,0,0,0,
54,0,0,8,194,0,
16,0,2,0,0,0,
2,64,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,45,0,0,137,
194,0,0,128,67,85,
21,0,242,0,16,0,
1,0,0,0,70,14,
16,0,2,0,0,0,
70,126,16,0,6,0,
0,0,0,0,0,8,
242,0,16,0,2,0,
0,0,70,14,16,128,
65,0,0,0,0,0,
0,0,70,14,16,0,
1,0,0,0,50,0,
0,9,242,32,16,0,
0,0,0,0,246,15,
16,0,1,0,0,0,
70,14,16,0,2,0,
0,0,70,14,16,0,
0,0,0,0,18,0,
0,1,69,0,0,139,
194,0,0,128,67,85,
21,0,242,32,16,0,
0,0,0,0,70,16,
16,0,0,0,0,0,
70,126,16,0,2,0,
0,0,0,96,16,0,
2,0,0,0,21,0,
0,1,21,0,0,1,
21,0,0,1,62,0,
0,1,83,84,65,84,
148,0,0,0,46,0,
0,0,4,0,0,0,
0,0,0,0,5,0,
0,0,11,0,0,0,
3,0,0,0,0,0,
0,0,4,0,0,0,
3,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
1,0,0,0,7,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,8,0,0,0,
0,0,0,0,6,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0,0,0,0,0,
0,0
};

}

namespace RetroArch
{
class SubframeBfiShadersMotionblur_testShadersMotionblur_testShaderDef : public ShaderDef
{
public:
	SubframeBfiShadersMotionblur_testShadersMotionblur_testShaderDef() : ShaderDef{}
	{
		Name = "motionblur_test";
		VertexByteCode = RetroArchSubframeBfiShadersMotionblur_testShadersMotionblur_testShaderDefs::sVertexByteCode;
		VertexLength = sizeof(RetroArchSubframeBfiShadersMotionblur_testShadersMotionblur_testShaderDefs::sVertexByteCode);
		FragmentByteCode = RetroArchSubframeBfiShadersMotionblur_testShadersMotionblur_testShaderDefs::sFragmentByteCode;
		FragmentLength = sizeof(RetroArchSubframeBfiShadersMotionblur_testShadersMotionblur_testShaderDefs::sFragmentByteCode);
		Params.push_back(ShaderParam("inv_speed", -1, 80, 4, 1.000000f, 20.000000f, 1.000000f, 1.000000f, "Invader Speed"));
		Params.push_back(ShaderParam("MVP", 0, 0, 64, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("SourceSize", -1, 0, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalSize", -1, 16, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OutputSize", -1, 32, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FrameCount", -1, 48, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("TotalSubFrames", -1, 52, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("CurrentSubFrame", -1, 56, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("FinalViewportSize", -1, 64, 16, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Params.push_back(ShaderParam("OriginalAspect", -1, 84, 4, 0.000000f, 0.000000f, 0.000000f, 0.000000f, ""));
		Samplers.push_back(ShaderSampler("Source", 2));
		Samplers.push_back(ShaderSampler("base", 3));
		Samplers.push_back(ShaderSampler("twoSub", 4));
		Samplers.push_back(ShaderSampler("threeSub", 5));
		Samplers.push_back(ShaderSampler("fourSub", 6));
/*
VertexSource = %*VERTEX_SOURCE*%;
*/
/*
FragmentSource = %*FRAGMENT_SOURCE*%;
*/
	}
};
}
